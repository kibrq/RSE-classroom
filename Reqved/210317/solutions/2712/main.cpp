#include <fstream>
#include <iostream>

/*
  Имеется набор данных, состоящий из положительных целых чисел, не превышающих
  10000. Необходимо найти количество троек, в которых сумма первых двух
  элементов равна третьему элементу. Порядок элементов тройки должен
  соответствовать порядку в последовательности. Входные данные. Даны два входных
  файла (файл A и файл B), каждый из которых содержит в первой строке количество
  чисел N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит одно
  натуральное число, не превышающее 10 000. Пример входного файла:
  7
  1
  2
  3
  5
  8
  7
  9
  Для указанных входных данных таких троек 6: { 1+2=3, 1+8=9, 2+3=5, 2+5=7,
  2+7=9, 3+5=8 }. В ответе укажите два числа: сначала количество троек для файла
  А, затем для файла B.
*/

constexpr int MAX_NUMBER = 1e4 + 10;

unsigned long long D[MAX_NUMBER];

int main() {
  std::ifstream is("input.txt");
  int n = 0;
  unsigned long long cnt = 0;
  is >> n;
  for (int i = 0; i < n; i++) {
    int value;
    is >> value;
    for (int k = 0; k < value; ++k) {
      cnt += (k == value - k ? D[k] - 1LL : D[k]) * D[value - k];
    }
    D[value] += 1LL;
  }
  std::cout << cnt / 2;
}
