'''
Имеется набор данных, состоящий из троек положительных целых чисел. Из каждой тройки выбрали два числа и нашли их наибольший общий делитель (НОД). Затем все полученные таким образом значения НОД сложили. Определите наибольшую сумму, кратную числу 10, которая может быть получено таким образом. Гарантируется, что искомую сумму получить можно. Программа должна напечатать одно число – максимально возможную сумму, соответствующую условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество троек N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.
Пример входного файла:
6
8 3 4 --> 1, 4, 1
4 8 12 --> 
9 5 6 [,,,9]
2 6 5 --> 
12 3 5
1 4 12
Для указанных входных данных значением искомой суммы должно быть число 20.
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.
'''

gcd(a, b) = gcd(a % b, b)

def gcd(a, b):
  if a == 0 or b == 0:
    return a + b

  if a < b:
    a, b = b, a

  return gcd(b, a % b)

k
2^k

p. 
  



for x in [l, r]:
  for d in range(3):
    if dp[d] == -1:
      continue
    p = (d + x)%3
    dpc[p] = max(dpc[p], x + dp[d])


