#!/usr/bin/env python3

'''
Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:

F(0) = 0;
F(n) = F(n / 2), если n > 0 и при этом чётно;
F(n) = 1 + F(n − 1), если n нечётно.

Сколько существует таких чисел n, что 1 ≤ n ≤ 500 и F(n) = 3?

Ответ:
'''

F = [0] * 600

for n in range(0, 600):
    if n == 0:
        F[n] = 0
    elif n % 2 == 0:
        F[n] = F[n // 2]
    else:
        F[n] = 1 + F[n - 1]

cnt = 0
for n in range(1, 500 + 1):
    if F[n] == 3:
        cnt += 1

print(cnt)

